{"version":3,"sources":["services/users.js","services/notes.js","services/account.js","services/login.js","services/roles.js","services/bitGame.js","components/LoginForm.js","components/Notification.js","components/SkelNavbar.js","components/TotalUsers.js","components/NoteForm.js","components/UserNotes.js","components/Home.js","components/SocketTests.js","components/NewUser.js","components/TotalNotes.js","components/GameLobby.js","components/CurrentUsersDisplay.js","components/CreateRoleForm.js","App.js","hooks/index.js","index.js"],"names":["services_users","axios","get","then","response","data","token","services_notes","newObject","config","regenerator_default","a","async","_context","prev","next","headers","Authorization","awrap","post","sent","abrupt","stop","newToken","concat","id","request","_context2","console","log","delete","account","credentials","t0","services_login","services_roles","bitGame","LoginForm","_ref","handleUsernameChange","handlePasswordChange","handleLogin","react_default","createElement","Form","inline","onSubmit","FormGroup","className","Label","for","Input","onChange","type","name","placeholder","Button","color","Notification","notificationText","notificationColor","Alert","Fragment","NappzackNavbar","toggleUserButton","user","handleLogout","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","onClick","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","to","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","TotalUsers","users","map","key","NoteForm","handleNoteSubmit","handleNoteChange","toggleNoteForm","note","value","UserNotes","notes","handleDeleteNote","showNoteForm","components_NoteForm","filter","content","Home","props","Jumbotron","SocketTests","testSocket","testSocketLogin","disconnectSocket","connectSocket","addCurrentUser","ButtonGroup","NewUser","handleNameChange","handleCreateAccount","TotalNotes","username","GameLobby","playerRole","currentGame","currentUsers","numberPlayers","games","handleStartGame","assignedUsers","currentFilteredUsers","game","numberPlayer","assignedUser","userId","gameName","gameType","numberCaptian","numberMate","numberMutineer","numberGood","numberEvil","role","CurrentUserDisplay","CreateRoleForm","roles","handleDeleteRole","handleCreateRole","handleRoleAlignmentChange","handleRoleDescriptionChange","handleRoleActionsChange","roleActions","roleName","roleDescription","roleAlignment","assign","socket","socketIoClient","App","setUser","_useState3","_useState4","_useState5","_useState6","setUsers","_useState7","_useState8","setNote","_useState9","_useState10","setNotes","_useState11","_useState12","setNumberPlayers","_useState13","_useState14","setUsername","_useState15","_useState16","password","setPassword","_useState17","_useState18","setName","_useState19","_useState20","errorMessage","setErrorMessage","_useState21","_useState22","successMessage","setSuccessMessage","_useState23","_useState24","newUserButton","setNewUserButton","_useState25","_useState26","setShowNoteForm","_useState27","_useState28","setCurrentUsers","_useState29","_useState30","setRoles","_useState31","_useState32","setGames","_useState33","_useState34","_useState35","_useState36","setAssignedUsers","setValue","event","target","reset","useField","_useState37","_useState38","setRoleAlignment","_useState39","_useState40","setRoleDescription","_useState41","_useState42","setRoleActions","_useState43","_useState44","roleBoolean","setRoleBoolean","useEffect","usersService","initialUsers","gamesService","initialGames","on","filteredUsers","length","notesService","initialNotes","rolesService","initialRoles","loggedAppUserJSON","window","localStorage","getItem","JSON","parse","_user2","_context3","preventDefault","loginService","setItem","stringify","emit","createNotification","newRoleObject","_context5","alignment","description","actions","newUserObject","_context6","accountService","message","setNotification","time","setTimeout","newNoteObject","_context7","newNotes","handleRoleBooleanChange","_context8","confirm","_context9","distributedRoles","_context10","distributeRoles","addRole","numberOfRoles","array","arguments","undefined","shuffle","sort","Math","random","values","currentGameThing","rolesArray","alignmentArray","captainArray","captain","index","objectSpread2","react_router_dom","SkelNavbar","_context4","removeItem","components_Notification","components_LoginForm","components_NewUser","react_router","path","component","components_SocketTests","render","components_TotalUsers","components_UserNotes","components_TotalNotes","CurrentUsersDisplay","components_GameLobby","components_CreateRoleForm","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d480dd7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, update }\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst deleteNote = async id => {\n  console.log(token)\n  const request = axios.delete(`${baseUrl}/${id}`, {headers: {Authorization: token}})\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken, deleteNote }\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst createAccount = async credentials => {\n  try {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n  } catch(exception){\n    return exception\n  }\n}\n\nexport default { createAccount }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/roles'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteRole = async id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteRole }\n","import axios from 'axios'\nconst baseUrl = '/api/bitGame'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteRole = async id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteRole }\n","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst LoginForm = (\n  {handleUsernameChange,\n  handlePasswordChange,\n  handleLogin}) => {\n  return (\n\n    <Form inline onSubmit={handleLogin}>\n      <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n        <Label for=\"exampleUsername\" className=\"mr-sm-2\">Username</Label>\n        <Input onChange={handleUsernameChange} type=\"username\" name=\"username\" id=\"exampleUsername\" placeholder=\"username\" />\n      </FormGroup>\n      <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n        <Label for=\"password\" className=\"mr-sm-2\">Password</Label>\n        <Input onChange={handlePasswordChange} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\"/>\n      </FormGroup>\n      <Button color='success'>Login</Button>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport { Alert } from 'reactstrap';\n\nconst Notification = ({notificationText, notificationColor}) => {\n\n  if (notificationText) {\n    return (\n      <div>\n        <Alert color={notificationColor}>\n          {notificationText}\n        </Alert>\n      </div>\n    );\n  } else {\n    return <> </>\n  }\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Button\n} from 'reactstrap';\n\nconst NappzackNavbar = ({ toggleUserButton, user, handleLogout }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const buttonText = () => {\n    if (toggleUserButton) {\n      return 'Create New'\n    } else {\n      return 'cancel'\n    }\n  }\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">devbar</NavbarBrand>\n        {user ? <Button onClick={handleLogout}>Log Out</Button> : <Button onClick={toggleUserButton} color='primary'>{buttonText()}</Button>}\n        {user ? <p>user: {user.name}</p> : null}\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to='home'>Home</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to='game_lobby'>Game Lobby</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to='user_notes'>User Notes</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to='socketTests'>Socket Tests</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to='total_notes'>Total Notes</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to='total_users'>Total Users</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to='current_logged_users'>Current Logged In Users</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to='create_role_form'>Create Role Form</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Options\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  Reset\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <NavbarText>more text</NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NappzackNavbar;\n","import React from 'react';\n\nconst TotalUsers = ({ users }) => {\n  return (\n    <>\n      <h1>Total Users in Database</h1>\n      {users.map(user => <h4 key={user.id}>{user.name}</h4>)}\n    </>\n  )\n}\n\n export default TotalUsers;\n","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst NoteForm = ({ handleNoteSubmit, handleNoteChange, toggleNoteForm, note }) => {\n  return (\n    <Form onSubmit={handleNoteSubmit}>\n      <FormGroup>\n        <Label for=\"exampleText\">Text Area</Label>\n        <Input onChange={handleNoteChange} value={note} type=\"textarea\" name=\"text\" id=\"exampleText\" />\n      </FormGroup>\n      <Button color='success'>Add note</Button>\n      {' '}\n      <Button color='warning' onClick={toggleNoteForm}>Cancel</Button>\n    </Form>\n  );\n}\n\nexport default NoteForm;\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport NoteForm from './NoteForm';\n\nconst UserNotes = ({\n  user,\n  notes,\n  handleDeleteNote,\n  toggleNoteForm,\n  handleNoteSubmit,\n  handleNoteChange,\n  showNoteForm,\n  note\n   }) => {\n\n  if (user) {\n    if (showNoteForm) {\n      return (\n        <>\n        <Button onClick={toggleNoteForm}>Add Note</Button>\n          <NoteForm\n          handleNoteSubmit={handleNoteSubmit}\n          handleNoteChange={handleNoteChange}\n          toggleNoteForm={toggleNoteForm}\n          note={note}\n          />\n        <h2>{user.name}'s Notes</h2>\n        <ul>\n          {notes.filter(note => note.user != null ? note.user.id === user.id : null)\n                .map(note => note ? <h6 key={note.id}>{note.content}<Button key={note.id} id={note.id} onClick={handleDeleteNote} className='btn-sm'>delete</Button></h6> : null)}\n        </ul>\n        </>\n      )\n    }\n    return (\n      <>\n      {<Button onClick={toggleNoteForm}>Add Note</Button>}\n      <h2>{user.name}'s Notes</h2>\n        <ul>\n          {notes.filter(note => note.user != null ? note.user.id === user.id : null)\n                .map(note => note ? <h6 key={note.id}>{note.content}<Button key={note.id} id={note.id} onClick={handleDeleteNote} className='btn-sm'>delete</Button></h6> : null)}\n        </ul>\n      </>\n    )\n  }\n  return (\n    <>\n      <h1>please log in to view notes.</h1>\n    </>\n\n  )\n}\n\nexport default UserNotes;\n","import React from 'react'\nimport { Jumbotron } from  'reactstrap';\n\nconst Home = (props) => {\n  return (\n  <Jumbotron>\n    <h2>skel v1</h2>\n  </Jumbotron>\n  )\n}\n\nexport default Home;\n","import React from 'react';\nimport { ButtonGroup, Button } from 'reactstrap';\n\nconst SocketTests = ({\n  testSocket,\n  testSocketLogin,\n  connectSocket,\n  disconnectSocket,\n  addCurrentUser}) => {\n\n  return (\n    <ButtonGroup>\n      <Button color='primary' onClick={testSocket}>Socket.io Test</Button>\n      <Button onClick={testSocketLogin}>Socket.io Test Login</Button>\n      <Button color='danger' onClick={disconnectSocket}>disconnect socket</Button>\n      <Button color='warning' onClick={addCurrentUser}>add current user</Button>\n    </ButtonGroup>\n  )\n}\n\nexport default SocketTests;\n","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst NewUser = ({\n  handleUsernameChange,\n  handlePasswordChange,\n  handleNameChange,\n  handleCreateAccount}) => {\n  return (\n    <Form onSubmit={handleCreateAccount}>\n      <FormGroup>\n        <Label for=\"username\">Username</Label>\n        <Input onChange={handleUsernameChange} type=\"text\" name=\"username\" id=\"username\" placeholder=\"username\"/>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"name\">Name</Label>\n        <Input onChange={handleNameChange} type=\"text\" name=\"name\" id=\"name\" placeholder=\"name\"/>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"examplePassword\">Password</Label>\n        <Input onChange={handlePasswordChange} type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\" />\n      </FormGroup>\n      <Button>Create Account</Button>\n    </Form>\n  );\n}\n\nexport default NewUser;\n","import React from 'react'\n\nconst TotalNotes = ({ notes }) => {\n  return (\n    <>\n      <h1>Total Notes in Database</h1>\n      {notes.map(note => note.user ? <h5 key={note.id} id={note.id}>{note.content} by {note.user.username}</h5> : null)}\n    </>\n  )\n}\n\nexport default TotalNotes;\n","import React from 'react';\nimport { Button } from 'reactstrap'\n\n// import SocketTests from './SocketTests';\n\nconst GameLobby = ({\n  currentUsers,\n  numberPlayers,\n  games,\n  handleStartGame,\n  assignedUsers,\n  user\n} ) => {\n  let playerRole\n  let currentGame;\n  const currentFilteredUsers = currentUsers.filter(user => user != null)\n  if (numberPlayers >= 4) {\n    currentGame = games.filter(game => game.numberPlayer === numberPlayers)[0]\n  }\n\n  if (assignedUsers) {\n    playerRole = assignedUsers.filter(assignedUser => assignedUser.userId === user.id)[0]\n    console.log(playerRole)\n  }\n\n  const renderCurrentGame = () => {\n    return (\n      <>\n        <h4>{currentGame.gameName}</h4>\n        <h6>game type: {currentGame.gameType}</h6>\n        <h6>Captains: {currentGame.numberCaptian}</h6>\n        <h6>Mates: {currentGame.numberMate}</h6>\n        <h6>Mutineers: {currentGame.numberMutineer}</h6>\n        <h6>There are {currentGame.numberGood} good cards.</h6>\n        <h6>There are {currentGame.numberEvil} evil cards.</h6>\n        <h6>There is always only 1 First Mate.</h6>\n      </>\n    )\n  }\n  if (currentFilteredUsers) {\n    return (\n      <>\n        <h2>People in Room: {numberPlayers}{numberPlayers >= 4 ? <Button onClick={handleStartGame} color='success'>Start Game</Button>: null}</h2>\n        <ul>\n          {currentFilteredUsers.map(user => <li key={user.id}>{user.username}</li>)}\n        </ul>\n        {numberPlayers < 4 ? <h4>need at least 4 players to start.</h4> : null}\n        {numberPlayers >= 4 ? renderCurrentGame() : null}\n        {playerRole ? <h4>You are the {playerRole.role}</h4> : null}\n      </>\n    )\n  } else {\n    console.log('no users')\n    return (\n      <h3>no current users detected.</h3>\n    )\n  }\n}\n\nexport default GameLobby;\n","import React from 'react';\nimport { Button } from 'reactstrap'\n\n// import SocketTests from './SocketTests';\n\nconst CurrentUserDisplay = ({\n  currentUsers,\n  numberPlayers,\n  games,\n  handleStartGame\n} ) => {\n  let currentGame;\n  console.log(currentUsers)\n  console.log(games)\n  const currentFilteredUsers = currentUsers.filter(user => user != null)\n  if (numberPlayers >= 4) {\n    currentGame = games.filter(game => game.numberPlayer === numberPlayers)[0]\n    console.log(currentGame)\n  }\n\n  const renderCurrentGame = () => {\n    return (\n      <>\n        <h4>{currentGame.gameName}</h4>\n        <h6>game type: {currentGame.gameType}</h6>\n        <h6>Captains: {currentGame.numberCaptian}</h6>\n        <h6>Mates: {currentGame.numberMate}</h6>\n        <h6>Mutineers: {currentGame.numberMutineer}</h6>\n        <h6>There are {currentGame.numberGood} good cards.</h6>\n        <h6>There are {currentGame.numberEvil} evil cards.</h6>\n        <h6>There is always only 1 First Mate.</h6>\n      </>\n    )\n  }\n  if (currentFilteredUsers) {\n    return (\n      <>\n        <h2>Current Logged in Users: {numberPlayers}{numberPlayers >= 4 ? <Button onClick={handleStartGame} color='success'>Start Game</Button>: null}</h2>\n        <ul>\n          {currentFilteredUsers.map(user => <li key={user.id}>{user.username}</li>)}\n        </ul>\n        {numberPlayers < 4 ? <h4>need at least 4 players to start.</h4> : null}\n        {numberPlayers >= 4 ? renderCurrentGame() : null}\n      </>\n    )\n  } else {\n    console.log('no users')\n    return (\n      <h3>no current users detected.</h3>\n    )\n  }\n}\n\nexport default CurrentUserDisplay;\n","import React from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst CreateRoleForm = ({\n  roles,\n  handleDeleteRole,\n  handleCreateRole,\n  handleRoleAlignmentChange,\n  handleRoleDescriptionChange,\n  handleRoleActionsChange,\n  roleActions,\n  roleName,\n  roleDescription,\n  roleAlignment }) => {\n    // use the spread syntax to separate the values instead of assigning them all\n  return (\n    <>\n      <Form onSubmit={handleCreateRole}>\n        <FormGroup>\n          <Label for=\"roleName\">role name</Label>\n          <Input {...roleName} name=\"roleName\" id=\"roleName\" placeholder=\"roleName\"/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"roleAlignment\">alignment</Label>\n          <Input value={roleAlignment} onChange={handleRoleAlignmentChange} type=\"text\" name=\"roleAlignment\" id=\"roleAlignment\" placeholder=\"roleAlignment\"/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"roleDescription\">role description</Label>\n          <Input value={roleDescription} onChange={handleRoleDescriptionChange} type=\"roleDescription\" name=\"roleDescription\" id=\"roleDescription\" placeholder=\"roleDescription\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"roleActions\">role actions</Label>\n          <Input value={roleActions} onChange={handleRoleActionsChange} type=\"roleActions\" name=\"roleActions\" id=\"roleActions\" placeholder=\"roleActions\" />\n        </FormGroup>\n        <Button>Create Role</Button>\n      </Form>\n      {roles.map(role => <p key={role.id}>{role.name}<Button id={role.id} onClick={handleDeleteRole}>delete</Button></p>)}\n    </>\n\n  );\n}\n\nexport default CreateRoleForm\n","import React, { useState, useEffect } from 'react';\nimport { useField } from './hooks'\n\n// api services\nimport usersService from './services/users';\nimport notesService from './services/notes';\nimport accountService from './services/account';\nimport loginService from './services/login';\nimport rolesService from './services/roles'\nimport gamesService from './services/bitGame';\nimport socketIoClient from 'socket.io-client'\n\n// component imports\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\nimport NappzackNavbar from './components/SkelNavbar';\nimport TotalUsers from './components/TotalUsers'\nimport UserNotes from './components/UserNotes'\nimport Home from './components/Home'\nimport SocketTests from './components/SocketTests'\nimport NewUser from './components/NewUser'\nimport TotalNotes from  './components/TotalNotes'\nimport GameLobby from './components/GameLobby'\n// import Footer from './components/PageFooter'\nimport CurrentUserDisplay from './components/CurrentUsersDisplay'\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CreateRoleForm from './components/CreateRoleForm';\n\n// initialize socket.io socket\nconst socket = socketIoClient('http://localhost:3001/')\n\nconst App = () => {\n  /*\n  const [roles, setRoles] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [games, setGames] = useState([]);\n  */\n  const [user, setUser] = useState(null)\n  const [userRole, setUserRole] = useState('')\n  const [users, setUsers] = useState([])\n  const [note, setNote] = useState('');\n  const [notes, setNotes] = useState([]);\n  const [numberPlayers, setNumberPlayers] = useState(0);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [newUserButton, setNewUserButton] = useState(false);\n  const [showNoteForm, setShowNoteForm] = useState(false)\n  const [currentUsers, setCurrentUsers] = useState([]);\n  const [roles, setRoles] = useState([])\n  const [games, setGames] = useState([])\n  const [currentGame, setCurrentGame] = useState({});\n  const [assignedUsers, setAssignedUsers] = useState([]);\n\n  //to do: finish moving all of these to custom hooks\n  const roleName = useField('text')\n  const [roleAlignment, setRoleAlignment] = useState('')\n  const [roleDescription, setRoleDescription] = useState('')\n  const [roleActions, setRoleActions] = useState('')\n  const [roleBoolean, setRoleBoolean] = useState(null)\n\n  // const createGameName = useField('text')\n  // const createMinPlayers = useField('number')\n  // const createMaxPlayers = useField('number')\n  // const createGameType = useField('text')\n  // const createNumberPlayers = useField('number')\n  // const createNumberCaptian = useField('number')\n  // const createNumberMate = useField('number')\n  // const createNumberMutineer = useField('number')\n  // const createNumberFirstmate = useField('number')\n  // const createNumberGood = useField('number')\n  // const createNumberEvil = useField('number')\n\n  useEffect(() => {\n    usersService\n      .getAll().then(initialUsers => {\n        setUsers(initialUsers)\n      })\n  }, [])\n\n  useEffect(() => {\n    gamesService\n      .getAll().then(initialGames => {\n        setGames(initialGames)\n      })\n  }, [])\n\n  useEffect(() => {\n    gamesService\n      .getAll().then(initialGames => {\n        setGames(initialGames)\n        console.log(initialGames)\n      })\n  }, [])\n\n  // useEffect(() => {\n  //   if (!socket) {\n  //     setSocket(socketIoClient('http://localhost:3001/'))\n  //   }\n  //   console.log('socket client connected');\n  // }, [socket, setSocket]);\n\n\n  // useEffect(() => {\n  //   console.log('visitor use effect run')\n  //   socket.on('visitors', users => {\n  //     console.log(users)\n  //     setEffectCounter(effectCounter+1)\n  //     console.log(effectCounter)\n  //   })\n  // }, [])\n\n  useEffect(() => {\n    console.log('use effect ran, component mounted')\n    socket.on('visitors', async users => {\n      const filteredUsers = await users.filter(user => user !== null)\n      await setCurrentUsers(filteredUsers);\n      setNumberPlayers(filteredUsers.length)\n    })\n  }, []);\n\n  useEffect(() => {\n    console.log('roles distributed')\n    socket.on('distribute roles', async roles => {\n      setAssignedUsers(roles)\n    })\n  }, []);\n\n  useEffect(() => {\n    notesService\n      .getAll().then(initialNotes => {\n        setNotes(initialNotes)\n      });\n  }, [])\n\n  useEffect(() => {\n    rolesService\n      .getAll().then(initialRoles => {\n        setRoles(initialRoles)\n        console.log(initialRoles)\n        console.log(roles)\n      });\n  }, [])\n\n  useEffect(() => {\n    console.log('set user run')\n    const loggedAppUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedAppUserJSON) {\n      const user = JSON.parse(loggedAppUserJSON)\n      setUser(user)\n      notesService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedAppUser', JSON.stringify(user)\n      )\n      socket.emit('add_user', {username: user.username, name: user.name, userId: user.id});\n      createNotification(`${user.name} has logged in`, setSuccessMessage, 5000)\n      console.log(`Logging in with ${username}.`)\n      notesService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      createNotification('wrong credentials', setErrorMessage, 5000)\n    }\n  }\n\n\n  const handleLogout = async () => {\n    await socket.emit('remove_user', {username:user.username, name: user.name, id: user.id})\n    window.localStorage.removeItem('loggedAppUser')\n    setUser(null);\n  }\n\n  const handleCreateRole = async (event) => {\n    event.preventDefault()\n    try {\n      const newRoleObject = {\n        name: roleName.value,\n        alignment: roleAlignment,\n        description: roleDescription,\n        actions: roleActions,\n      }\n      await rolesService.create(newRoleObject)\n      createNotification(`${roleName.value} created!`, setSuccessMessage, 5000)\n      rolesService\n        .getAll().then(initialRoles => {\n          setRoles(initialRoles)\n        })\n      setRoleActions('')\n      roleName.reset()\n      // setRoleName('')\n      setRoleAlignment('')\n      setRoleDescription('')\n      setRoleBoolean('')\n    } catch (error) {\n      createNotification('could not create role', setErrorMessage, 5000);\n      console.log(error)\n    }\n  }\n\n  const handleCreateAccount = async (event) => {\n    event.preventDefault()\n    try {\n      const newUserObject = {\n        password: password,\n        name: name,\n        username: username\n      }\n      await accountService.createAccount(newUserObject)\n      toggleUserButton()\n      createNotification(`Welcome ${newUserObject.name}, your account has been created.`, setSuccessMessage, 5000);\n    } catch (error) {\n      createNotification('username already taken', setErrorMessage, 5000);\n      console.log(error)\n    }\n  }\n\n  const createNotification = (message, setNotification, time) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification(null)\n    }, time)\n  }\n\n  const handleNoteSubmit = async (event) => {\n    event.preventDefault()\n    console.log(note)\n    try{\n      const newNoteObject = {\n        content: note,\n        user: user\n      }\n      await notesService.create(newNoteObject)\n      createNotification('Note has been added', setSuccessMessage, 5000)\n      toggleNoteForm()\n      await notesService.getAll().then(newNotes => {\n        setNotes(newNotes)\n      })\n    } catch(exception) {\n      console.log(exception)\n    }\n  }\n\n  const toggleUserButton = () => {\n    setNewUserButton(!newUserButton)\n  }\n\n  const toggleNoteForm = () => {\n    setShowNoteForm(!showNoteForm)\n  }\n  // event handlers\n  const handleNoteChange = (event) => {\n    setNote(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setName(event.target.value)\n  }\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  // all of these event handlers can be removed once custom hooks are refactored in\n  //role event listeners\n  // const handleRoleNameChange = (event) => {\n  //   setRoleName(event.target.value);\n  // }\n\n  const handleRoleAlignmentChange = (event) => {\n    setRoleAlignment(event.target.value)\n  }\n\n  const handleRoleDescriptionChange = (event) => {\n    setRoleDescription(event.target.value)\n  }\n\n  const handleRoleActionsChange = (event) => {\n    setRoleActions(event.target.value)\n  }\n\n  const handleRoleBooleanChange = (event) => {\n    setRoleBoolean(event.target.value)\n  }\n\n  const handleDeleteNote =  async (event) => {\n    event.preventDefault()\n    if(window.confirm('are you sure you want to delete note?')) {\n      console.log(event.target.id)\n    }\n    await notesService.deleteNote(event.target.id)\n    createNotification(`note deleted`, setSuccessMessage, 5000)\n    notesService\n      .getAll().then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }\n\n  const handleDeleteRole = async (event) => {\n    event.preventDefault()\n    if(window.confirm('are you sure you want to delete note?')) {\n      console.log(event.target.id);\n    }\n    await rolesService.deleteRole(event.target.id)\n    rolesService\n      .getAll().then(initialRoles => {\n        setRoles(initialRoles)\n      })\n  }\n\n  const newUserForm = () => {\n    if (newUserButton) {\n      return(\n        <NewUser\n          handleNameChange={handleNameChange}\n          handleCreateAccount={handleCreateAccount}\n          handleUsernameChange={handleUsernameChange}\n          handlePasswordChange={handlePasswordChange}/>\n      )\n    } else {\n      return (\n        <> </>\n      )\n    }\n  }\n\n  const testSocket = () => {\n    if (socket) {\n      socket.emit('button')\n    }\n  }\n\n  const disconnectSocket = () => {\n    if (socket) {\n      socket.emit('disconnect')\n    }\n  }\n\n  const testSocketLogin = () => {\n    if (user) {\n      socket.emit('login', user.name)\n    } else {\n      console.log('no user')\n    }\n  }\n\n  const addCurrentUser = () => {\n    if (user) {\n      socket.emit('add user', user.name)\n    } else {\n      console.log('no user')\n    }\n  }\n\n  const handleStartGame = async () => {\n    const distributedRoles = distributeRoles();\n    socket.emit('start game', distributedRoles)\n  }\n\n  const addRole = (name, numberOfRoles, array = []) => {\n    if (numberOfRoles > 1) {\n      array = array.concat(name)\n      return addRole(name, numberOfRoles - 1, array)\n    } else if (numberOfRoles === 1) {\n      array = array.concat(name)\n      return array\n    }\n  }\n\n  const shuffle = (array) => {\n    return array.sort(() => Math.random() - 0.5);\n  }\n\n  const distributeRoles = () => {\n    if (numberPlayers >= 4) {\n      const inRoomUsers = Object.values(currentUsers)\n      const currentGameThing = games.filter(game => game.numberPlayer === numberPlayers)[0]\n      let rolesArray = []\n      let alignmentArray = []\n      let captainArray = []\n      // rolesArray = rolesArray.concat(addRole('captian', currentGameThing.numberCaptian))\n      captainArray = captainArray.concat(addRole('captain', currentGameThing.numberCaptian))\n      rolesArray = rolesArray.concat(addRole('mate', currentGameThing.numberMate))\n      rolesArray = rolesArray.concat(addRole('mutineer', currentGameThing.numberMutineer))\n      rolesArray = rolesArray.concat(addRole('firstmate', 1))\n\n      alignmentArray = alignmentArray.concat(addRole('good', currentGameThing.numberGood))\n      alignmentArray = alignmentArray.concat(addRole('evil', currentGameThing.numberEvil))\n      console.log(alignmentArray)\n      alignmentArray = shuffle(alignmentArray)\n      captainArray = captainArray.map((captain, index) => {\n         return alignmentArray[index] === 'good' ? 'captain' : 'seawitch'\n      })\n      console.log(captainArray)\n      rolesArray = rolesArray.concat(captainArray)\n      rolesArray = shuffle(rolesArray)\n      const assignedUsersArray = currentUsers.map((user, index) => {\n        user = {\n          ...user,\n          role: rolesArray[index]\n        }\n        return user\n      })\n      return assignedUsersArray\n    }\n  }\n\n  const loginForm = () => {\n    if (newUserButton || user) {\n      return (\n        null\n      )\n    } else {\n      return (\n        <LoginForm\n          handleLogin={handleLogin}\n          handleUsernameChange={handleUsernameChange}\n          handlePasswordChange={handlePasswordChange}/>\n      )\n    }\n  }\n  return (\n    <>\n      <Router>\n        <NappzackNavbar\n          toggleUserButton={toggleUserButton}\n          user={user}\n          handleLogout={handleLogout}\n        />\n        <Notification\n          notificationColor={'danger'}\n          notificationText={errorMessage}/>\n\n        <Notification\n          notificationColor={'success'}\n          notificationText={successMessage}/>\n\n        {loginForm()}\n        {newUserForm()}\n\n        <Switch>\n          <Route path='/socketTests' component={() =>\n            <SocketTests\n              testSocket={testSocket}\n              testSocketLogin={testSocketLogin}\n              disconnectSocket={disconnectSocket}\n              addCurrentUser={addCurrentUser}\n            /> } />\n          <Route path='/home' component={Home} />\n          <Route path='/total_users' render={() => <TotalUsers users={users}/>}/>\n          <Route path='/user_notes' render={() =>\n            <UserNotes\n              showNoteForm={showNoteForm}\n              user={user}\n              toggleNoteForm={toggleNoteForm}\n              notes={notes}\n              handleDeleteNote={handleDeleteNote}\n              handleNoteSubmit={handleNoteSubmit}\n              handleNoteChange={handleNoteChange}\n              note={note}\n            />}/>\n          <Route path='/total_notes' render={() => <TotalNotes notes={notes}/>}/>\n          <Route path='/current_logged_users' render={() =>\n            <CurrentUserDisplay\n              numberPlayers={numberPlayers}\n              currentUsers={currentUsers}\n              games={games}\n            />\n          }/>\n          <Route path='/game_lobby' render={() =>\n              <GameLobby\n              numberPlayers={numberPlayers}\n              currentUsers={currentUsers}\n              games={games}\n              handleStartGame={handleStartGame}\n              assignedUsers={assignedUsers}\n              user={user}\n            />\n          }/>\n\n          <Route path='/create_role_form' render={() =>\n            <CreateRoleForm\n              handleDeleteRole={handleDeleteRole}\n              roles={roles}\n              roleAlignment={roleAlignment}\n              roleName={roleName}\n              roleDescription={roleDescription}\n              roleBoolean={roleBoolean}\n              roleActions={roleActions}\n              handleCreateRole={handleCreateRole}\n              // handleRoleNameChange={handleRoleNameChange}\n              handleRoleAlignmentChange={handleRoleAlignmentChange}\n              handleRoleDescriptionChange={handleRoleDescriptionChange}\n              handleRoleActionsChange={handleRoleActionsChange}\n              handleRoleBooleanChange={handleRoleBooleanChange}\n            />}/>\n        </Switch>\n      </Router>\n\n      {/* <Footer /> */}\n\n    </>\n  )\n}\n\n\nexport default App\n","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/app.css'\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}